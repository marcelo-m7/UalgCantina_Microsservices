###############################################################################
#  DOCKER-COMPOSE — micro-serviços “Cantina”                                 #
###############################################################################

services:
  # ────────────────────────────────  DATABASE  ──────────────────────────────── #
  # db:
  #   image: marcelom7/ualgcantina-db:latest
  #   build:
  #     context: ./services/db
  #     dockerfile: Dockerfile
  #   container_name: app_db
  #   env_file: .env
  #   environment:
  #     MYSQL_DATABASE:      ${MYSQL_DB}
  #     MYSQL_USER:          ${MYSQL_USER}
  #     MYSQL_PASSWORD:      ${MYSQL_PASSWORD}
  #     MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
  #   volumes:
  #     - db_data:/var/lib/mysql
  #   healthcheck:
  #     test: >
  #       mysqladmin ping -h127.0.0.1 -P3306
  #       -uroot -p${MYSQL_PASSWORD} --silent
  #     start_period: 25s
  #     interval:     10s
  #     timeout:      5s
  #     retries:      5
  #   restart: unless-stopped

  # ────────────────────────────────  PHPMYADMIN  ───────────────────────────── #
  # phpmyadmin:
  #   image: phpmyadmin/phpmyadmin:latest
  #   container_name: app_phpmyadmin
  #   ports:
  #     - "8081:80"
  #   env_file: .env
  #   environment:
  #     PMA_HOST: db
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #   restart: unless-stopped

  # ────────────────────────────────────  API  ───────────────────────────────── #
  api:
    image: marcelom7/ualgcantina-api:latest
    build:
      context: ./services/api
      dockerfile: Dockerfile
    container_name: app_api
    ports:
      - "8080:8080"
    env_file: .env

  # ────────────────────────────────────  WEB  ──────────────────────────────── #
  web:
    image: marcelom7/ualgcantina-web:latest
    build:
      context: ./services/web
      dockerfile: Dockerfile
    container_name: app_web
    ports:
      - "3000:3000"
    env_file: .env
    # depends_on:
      # api:
      #   condition: service_healthy
    restart: unless-stopped

# ─────────────────────────────────  VOLUMES  ─────────────────────────────── #
# volumes:
#   db_data:
